#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        ctrl+a {
            bindings = <&kp LC(A)>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESC Q         &kp W         &kp E             &kp R                   &kp T                                                                &kp Y        &kp U  &mt MINUS I          &mt PLUS O               &kp P
&mt LCTRL A       &kp S         &kp D             &kp F                   &kp G            &trans                      &kp ESC                 &kp H        &kp J  &kp K                &kp L                    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                   &kp B            &kp LG(W)                   &kp SEMICOLON           &kp N        &kp M  &mt LESS_THAN COMMA  &mt GREATER_THAN PERIOD  &lt_to_layer_0 3 TAB
&kp TAB           &kp LEFT_ALT  &kp LEFT_COMMAND  &lt_to_layer_0 1 ENTER  &lt 2 BACKSPACE  &lt_to_layer_0 3 SPACE      &lt_to_layer_0 5 SPACE  &lt 1 ENTER                                                       &lt_to_layer_0 3 SLASH
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LG(W)        &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp DOLLAR                             &kp AMPERSAND     &kp ASTERISK          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp LS(LC(TAB))  &kp LC(TAB)      &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp PERCENT  &trans         &kp F13    &kp F6            &mt UNDERSCORE MINUS  &mt MINUS PLUS        &kp EQUAL              &kp PIPE
&kp LEFT_SHIFT   &trans           &trans                &trans                 &trans       &kp LG(D)      &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION
&trans           &trans           &trans                &trans                 &trans       &trans         &kp SPACE  &trans                                                                               &kp F12
            >;

            sensor-bindings = <&inc_dec_kp LG(PLUS) LG(MINUS)>;
        };

        NUM {
            bindings = <
&trans          &trans           &trans           &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp N7        &kp N8        &kp N9        &kp RIGHT_PARENTHESIS
&kp SLASH       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERCENT
&kp LEFT_SHIFT  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH
&trans          &trans           &kp LEFT_ALT     &trans           &trans        &trans                       &kp LA(SPACE)   &kp N0                                                      &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE         &trans           &trans                &trans                &trans                      &trans  &trans    &kp UP_ARROW    &trans  &trans
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans      &trans  &trans  &kp LEFT  &kp RIGHT       &trans  &trans
&kp LEFT_SHIFT     &trans           &trans                &trans                &trans  &trans      &trans  &trans  &kp DOWN  &kp DOWN_ARROW  &trans  &trans
&trans             &trans           &trans                &kp LEFT_COMMAND      &trans  &trans      &trans  &trans                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
